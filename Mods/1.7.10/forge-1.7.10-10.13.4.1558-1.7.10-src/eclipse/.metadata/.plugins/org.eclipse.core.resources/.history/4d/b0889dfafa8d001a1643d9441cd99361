package fr.helios.astral.utils.generation;

import java.util.Random;

import cpw.mods.fml.common.IWorldGenerator;
import net.minecraft.init.Blocks;
import net.minecraft.world.World;
import net.minecraft.world.biome.BiomeGenBase;
import net.minecraft.world.chunk.IChunkProvider;

public class StructureGenerator implements IWorldGenerator
{

    @Override
    public void generate(Random random, int chunkX, int chunkZ, World world, IChunkProvider chunkGenerator, IChunkProvider chunkProvider)
    {
        switch(world.provider.dimensionId)
        {
            case -1:
                
                generateNether(world, random, chunkX * 16, chunkZ * 16);
                
                break;
                
            case 0:
                
                generateSurface(world, random, chunkX * 16, chunkZ * 16);
                
                break;
                
            case 1:
                generateEnd(world, random, chunkX * 16, chunkZ * 16);
                
                break;
        }
    }

    private void generateEnd(World world, Random random, int x, int z)
    {
        
    }

    private void generateSurface(World world, Random random, int x, int z)
    {
        int x1 = x + random.nextInt(16);
        int y1 = random.nextInt(128);
        int z1 = z + random.nextInt(16);
        
        for(int i = 0; i < 500; i++)
        {
            if(world.getBiomeGenForCoords(x1, z1) == BiomeGenBase.desert)
            {
            (new WorldGenShrine()).generate(world, random, x1, y1, z1);
            
        }
    }

    private void generateNether(World world, Random random, int x, int z)
    {
        
    }

}
