package fr.helios.astral.utils.generation;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import javax.swing.text.html.parser.Entity;

import net.minecraft.util.LongHashMap;
import net.minecraft.world.Teleporter;
import net.minecraft.world.WorldServer;

public class AstralTeleporter extends Teleporter
{
    private final WorldServer worldServerInstance;
    private final Random random;
    private final LongHashMap destinationCoordinateCache = new LongHashMap();
 
    private final List destinationCoordinateKeys = new ArrayList();
 
    public AstralTeleporter(WorldServer worldServer)
    {
        super(worldServer);
        this.worldServerInstance = worldServer;
        this.random = new Random(worldServer.getSeed());
    }
 
    public void placeInPortal(Entity entity, double x, double y, double z, float rotationYaw)
    {
        if(this.worldServerInstance.provider.dimensionId != 1)
        {
            if(!this.placeInExistingPortal(entity, x, y, z, rotationYaw))
            {
                this.makePortal(entity);
                this.placeInExistingPortal(entity, x, y, z, rotationYaw);
            }
        }
        else
        {
            int i = MathHelper.floor_double(entity.posX);//position x
            int j = MathHelper.floor_double(entity.posY) - 1;//position y
            int k = MathHelper.floor_double(entity.posZ);//position z
            byte b0 = 1;
            byte b1 = 0;
            for(int l = -2; l <= 2; ++l)
            {
                for(int i1 = -2; i1 <= 2; ++i1)
                {
                    for(int j1 = -1; j1 < 3; ++j1)
                    {
                        int k1 = i + i1 * b0 + l * b1;
                        int l1 = j + j1;
                        int i2 = k + i1 * b1 - l * b0;
                        boolean flag = j1 < 0;
 
                        //set la structure
                        this.worldServerInstance.setBlock(k1, l1, i2, flag ? Blocks.stone : Blocks.air);
                    }
                }
            }
            entity.setLocationAndAngles((double)i, (double)j, (double)k, entity.rotationYaw, 0.0F);
            entity.motionX = entity.motionY = entity.motionZ = 0.0D;
        }
    }
 
    public boolean placeInExistingPortal(Entity entity, double x, double y, double z, float rotationYaw)
    {
 
    }
 
    public boolean makePortal(Entity entity)
    {
 
    }
}
