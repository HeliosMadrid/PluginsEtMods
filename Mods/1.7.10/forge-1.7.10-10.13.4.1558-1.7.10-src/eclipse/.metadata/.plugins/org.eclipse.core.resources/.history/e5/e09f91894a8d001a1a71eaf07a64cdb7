package fr.helios.astral.mob.boss;

import java.util.List;

import fr.helios.astral.mob.boss.SF.EntityMobAstralSF;
import net.minecraft.entity.EntityCreature;
import net.minecraft.entity.SharedMonsterAttributes;
import net.minecraft.entity.monster.EntityMob;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.util.AxisAlignedBB;
import net.minecraft.world.World;

public class EntityMobAstralBoss extends EntityMob
{
        
    public EntityMobAstralBoss(World world)
    {
        super(world);
    }
    
    protected void applyEntityAttributes()
    {
        super.applyEntityAttributes();
        this.getEntityAttribute(SharedMonsterAttributes.maxHealth).setBaseValue(500D);
        this.getEntityAttribute(SharedMonsterAttributes.attackDamage).setBaseValue(20D);
        this.getEntityAttribute(SharedMonsterAttributes.knockbackResistance).setBaseValue(1000000D);
        this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setBaseValue(1.5D);
    }
    
    public Item getDropItem()
    {
        return Items.apple;
    }
    
    public void onlivingUpdate()
    {
        this.getEntitiesNearby(this.worldObj, this.posX, this.posY, this.posZ);
    }

    private void getEntitiesNearby(World world, double currentPosX, double currentPosY, double currentPosZ)
    {
        List entitiesNearby = world.getEntitiesWithinAABB(EntityMobAstralSF.class, AxisAlignedBB.getBoundingBox(currentPosX, currentPosY, currentPosZ, currentPosX + 32, currentPosY + 32, currentPosZ + 32));
        
        for(float i = 0; i<= entitiesNearby.size(); i++)
        {
            if(!this.worldObj.isRemote)
            {
                this.heal(i);
                if(!worldObj.isRemote)
                world.spawnParticle("heart", (double)(0.5F + 0.6F), (double)0.7F, (double)(0.7F - 0.6F), 0.0D, 0.0D, 0.0D);
            }
        }
    }

    public void updateEntityActionState()
    {
        super.updateEntityActionState();
        List list = worldObj.getEntitiesWithinAABB(EntityCreature.class, AxisAlignedBB.getAABBPool().getAABB(posX, posY, posZ, posX + 1, posY + 1, posZ + 1).expand(16D, 4D, 16D));          
        
        for(int i = 0; i<list.size(); i++)
        {
            
        }
    }
}


    
